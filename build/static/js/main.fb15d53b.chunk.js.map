{"version":3,"sources":["config.js","components/Signup/index.js","assets/genericComponents/ErrorMessage.js","assets/genericComponents/Loader.js","redux/actions/utilities.js","redux/actions/employeeAction.js","redux/api/employeeApi.js","components/Employee/index.js","components/index.js","components/NoPageFound/index.js","Navigation/Auth/ProvideAuth.js","Navigation/Auth/PublicRoute.js","Navigation/RouterConfig.js","App.js","reportWebVitals.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["ERROR","PATH","NOPAGE","REGISTER","SIGNUP","baseUrl","APP_SETTINGS","API_PATH","Employee","registeremployee","deleteemployee","getallemployee","getsingleemployee","Signup","useEffect","document","title","className","to","ErrorMessage","props","message","FieldError","Loader","Spinner","animation","variant","request","actionType","type","success","response","payload","failure","error","EMPLOYEE_REQUEST","registerEmployee","employeeData","Notificiation","dispatch","employeedata","axios","post","then","console","log","status","data","udpateEmployee","deleteEmployeeRecord","id","delete","deleteEmployee","getsingleEmployee","get","getSingleEmployeeRecord","getAllEmployees","search","getAllEmployee","EmployeeRegister","WEB_PAGES","EMPLOYEEREGISTER","useForm","register","handleSubmit","errors","reset","useState","searchvalue","setsearchvalue","setEmployeeId","name","setname","email","setemail","department","setdepartment","setdateOfBirth","useDispatch","employee","useSelector","state","condition","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","getsingle","dateOfBirth","Fragment","Card","Body","FormGroup","FormLabel","FormControl","onChange","e","target","value","trim","length","Header","getall","Table","bordered","hover","map","item","index","onClick","editEmployee","registerFailure","registerError","onSubmit","style","borderColor","defaultValue","ref","required","registerLoading","authContext","createContext","ProvideAuth","children","useCookies","user","Provider","PublicRoute","RouterConfig","pathname","useLocation","window","scrollTo","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","registerSuccess","updateLoading","updateSuccess","updateFailure","updateError","rootReducer","combineReducers","action","allEmpList","push","allemployeelist","i","getsingleLoading","getsingleLoadingSuccess","getsingleLoadingFailure","getsingleLoadingError","getsingleSuccess","getsingleFailure","getsingleError","getallLoading","getallLoadingSuccess","getallLoadingFailure","getallLoadingError","getallSuccess","getallFailure","getallError","deleteLoading","deleteSuccess","deleteFailure","deleteError","allemplist","splice","devTools","a","middleware","compose","applyMiddleware","thunk","store","createStore","ReactDOM","render","StrictMode","CookiesProvider","getElementById"],"mappings":"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","file":"static/js/main.fb15d53b.chunk.js","sourcesContent":["const ERROR = {\n    SYSTEM_ERROR: \"System error. Please try again later!\"\n};\nconst PATH = {\n    NOPAGE: \"*\",\n    REGISTER: \"/app\",\n    SIGNUP:\"/signup\"\n};\n\nconst baseUrl = \"https://emsbe.azurewebsites.net/api/\";\nconst APP_SETTINGS = {\n    API_PATH: {\n        Employee: {\n            registeremployee: baseUrl + \"Employee/CreateOrUpdateEmployee\",\n            deleteemployee: baseUrl+\"Employee/DeleteEmployee\",\n            getallemployee: baseUrl+\"Employee/GetAllEmployees\",\n            getsingleemployee: baseUrl+\"Employee/GetSingle\",\n\n\n        }\n    }\n};\nexport {\n    ERROR,\n    PATH,\n    APP_SETTINGS\n};\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {PATH} from \"../../config\";\n\nfunction Signup() {\n  \n  useEffect(() => {\n    document.title = \"Sign Up || Lotus Yodha\"\n  }, [])\n  \n  return (\n    <div className=\"container-fluid page-height main-login-body p-5\">\n      <div className=\"login-body-inner shadow\">\n      <Link to={PATH.SIGNUP}>\n        Sign Up\n      </Link>\n      </div>\n    </div>\n  );\n}\nexport default Signup;\n\n","import React  from \"react\";\nimport { ERROR } from '../../config';\nexport function ErrorMessage(props) {\n    return (\n        <div className=\"error-message-generic\">\n            <p>\n                {(props.message ? props.message : ERROR.SYSTEM_ERROR)}\n            </p>\n        </div>\n    )\n\n}\n\nexport function FieldError(props) {\n    return (\n        <div className=\"error-message-field-generic\">\n            <p>\n                {(props.message ? props.message : ERROR.SYSTEM_ERROR)}\n            </p>\n        </div>\n    )\n}","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\nexport function Loader() {\n    return (\n        <div className=\"text-align-center\">\n            <Spinner animation=\"grow\" variant=\"danger\" />\n        </div>\n    )\n}","function request(actionType) {\n    return {\n        type: actionType\n    }\n}\nfunction success(actionType, response) {\n    return {\n        type: actionType,\n        payload: response\n    }\n}\nfunction failure(actionType, error) {\n    return {\n        type: actionType,\n        payload: error\n    }\n}\nconst EMPLOYEE_REQUEST = {\n    EMPLOYEE_REGISTER_RESET: \"EMPLOYEE_REGISTER_RESET\",\n    EMPLOYEE_REGISTER_REQUEST: \"EMPLOYEE_REGISTER_REQUEST\",\n    EMPLOYEE_REGISTER_SUCCESS: \"EMPLOYEE_REGISTER_SUCCESS\",\n    EMPLOYEE_REGISTER_FAILURE: \"EMPLOYEE_REGISTER_FAILURE\",\n\n    EMPLOYEE_UPDATE_RESET: \"EMPLOYEE_UPDATE_RESET\",\n    EMPLOYEE_UPDATE_REQUEST: \"EMPLOYEE_UPDATE_REQUEST\",\n    EMPLOYEE_UPDATE_SUCCESS: \"EMPLOYEE_UPDATE_SUCCESS\",\n    EMPLOYEE_UPDATE_FAILURE: \"EMPLOYEE_UPDATE_FAILURE\",\n\n    EMPLOYEE_GET_SINGLE_REQUEST: \"EMPLOYEE_GET_SINGLE_REQUEST\",\n    EMPLOYEE_GET_SINGLE_SUCCESS: \"EMPLOYEE_GET_SINGLE_SUCCESS\",\n    EMPLOYEE_GET_SINGLE_FAILURE: \"EMPLOYEE_GET_SINGLE_FAILURE\",\n\n    EMPLOYEE_GET_ALL_REQUEST: \"EMPLOYEE_GET_ALL_REQUEST\",\n    EMPLOYEE_GET_ALL_SUCCESS: \"EMPLOYEE_GET_ALL_SUCCESS\",\n    EMPLOYEE_GET_ALL_FAILURE: \"EMPLOYEE_GET_ALL_FAILURE\",\n\n    EMPLOYEE_DELETE_REQUEST: \"EMPLOYEE_DELETE_REQUEST\",\n    EMPLOYEE_DELETE_SUCCESS: \"EMPLOYEE_DELETE_SUCCESS\",\n    EMPLOYEE_DELETE_FAILURE: \"EMPLOYEE_DELETE_FAILURE\",\n}\n\n\n\nexport {\n    request,\n    success,\n    failure,\n    EMPLOYEE_REQUEST\n}\n","import { request, success, failure, EMPLOYEE_REQUEST } from './utilities';\r\nimport { employeeRegister, deleteEmployee,getSingleEmployeeRecord,getAllEmployee,employeeUpdate} from '../api';\r\n\r\nexport function registerEmployee(employeeData,Notificiation) {\r\n    return (dispatch) => {\r\n        dispatch(request(EMPLOYEE_REQUEST.EMPLOYEE_REGISTER_REQUEST));\r\n        employeeRegister(employeeData).then(\r\n            response => {\r\n                console.log(\"log from action\",response)\r\n                if (response.status === 200) {\r\n                     dispatch(success(EMPLOYEE_REQUEST.EMPLOYEE_REGISTER_SUCCESS, response.data))\r\n                     Notificiation(\"Employee Added Successfully\", \"success\")\r\n                }\r\n                else {\r\n                    dispatch(failure(EMPLOYEE_REQUEST.EMPLOYEE_REGISTER_FAILURE, response.data.message))\r\n                }\r\n            },\r\n            error => {\r\n                dispatch(failure(EMPLOYEE_REQUEST.EMPLOYEE_REGISTER_FAILURE, (error && error.response && error.response.data && error.response.data.message ? error.response.data.message : error.message)))\r\n            }\r\n        )\r\n    };\r\n}\r\nexport function udpateEmployee(employeeData,Notificiation) {\r\n    return (dispatch) => {\r\n        dispatch(request(EMPLOYEE_REQUEST.EMPLOYEE_UPDATE_REQUEST));\r\n        employeeUpdate(employeeData).then(\r\n            response => {\r\n                console.log(\"log from action\",response)\r\n                if (response.status === 200) {\r\n                     dispatch(success(EMPLOYEE_REQUEST.EMPLOYEE_UPDATE_SUCCESS, response.data))\r\n                     Notificiation(\"Employee Updated Successfully\", \"success\")\r\n                }\r\n                else {\r\n                    dispatch(failure(EMPLOYEE_REQUEST.EMPLOYEE_UPDATE_FAILURE, response.data.message))\r\n                }\r\n            },\r\n            error => {\r\n                dispatch(failure(EMPLOYEE_REQUEST.EMPLOYEE_UPDATE_FAILURE, (error && error.response && error.response.data && error.response.data.message ? error.response.data.message : error.message)))\r\n            }\r\n        )\r\n    };\r\n}\r\nexport function deleteEmployeeRecord(id,Notificiation) {\r\n    return (dispatch) => {\r\n        dispatch(request(EMPLOYEE_REQUEST.EMPLOYEE_DELETE_REQUEST));\r\n        deleteEmployee(id).then(\r\n            response => {\r\n                console.log(\"log from action\",response)\r\n                if (response.status === 200) {\r\n                     dispatch(success(EMPLOYEE_REQUEST.EMPLOYEE_DELETE_SUCCESS, id))\r\n                     Notificiation(\"Employee Deleted Successfully\", \"success\")\r\n                }\r\n                else {\r\n                    dispatch(failure(EMPLOYEE_REQUEST.EMPLOYEE_DELETE_FAILURE, response.data.message))\r\n                }\r\n            },\r\n            error => {\r\n                dispatch(failure(EMPLOYEE_REQUEST.EMPLOYEE_DELETE_FAILURE, (error && error.response && error.response.data && error.response.data.message ? error.response.data.message : error.message)))\r\n            }\r\n        )\r\n    };\r\n}\r\nexport function getsingleEmployee(id) {\r\n    return (dispatch) => {\r\n        dispatch(request(EMPLOYEE_REQUEST.EMPLOYEE_GET_SINGLE_REQUEST));\r\n        getSingleEmployeeRecord(id).then(\r\n            response => {\r\n                console.log(\"log from action\",response)\r\n                if (response.status === 200) {\r\n                     dispatch(success(EMPLOYEE_REQUEST.EMPLOYEE_GET_SINGLE_SUCCESS, response.data))\r\n                }\r\n                else {\r\n                    dispatch(failure(EMPLOYEE_REQUEST.EMPLOYEE_GET_SINGLE_FAILURE, response.data.message))\r\n                }\r\n            },\r\n            error => {\r\n                dispatch(failure(EMPLOYEE_REQUEST.EMPLOYEE_GET_SINGLE_FAILURE, (error && error.response && error.response.data && error.response.data.message ? error.response.data.message : error.message)))\r\n            }\r\n        )\r\n    };\r\n}\r\nexport function getAllEmployees(search) {\r\n    return (dispatch) => {\r\n        dispatch(request(EMPLOYEE_REQUEST.EMPLOYEE_GET_ALL_REQUEST));\r\n        getAllEmployee(search).then(\r\n            response => {\r\n                console.log(\"log from action\",response)\r\n                if (response.status === 200) {\r\n                     dispatch(success(EMPLOYEE_REQUEST.EMPLOYEE_GET_ALL_SUCCESS, response.data))\r\n                }\r\n                else {\r\n                    dispatch(failure(EMPLOYEE_REQUEST.EMPLOYEE_GET_ALL_FAILURE, response.data.message))\r\n                }\r\n            },\r\n            error => {\r\n                dispatch(failure(EMPLOYEE_REQUEST.EMPLOYEE_GET_ALL_FAILURE, (error && error.response && error.response.data && error.response.data.message ? error.response.data.message : error.message)))\r\n            }\r\n        )\r\n    };\r\n}\r\n","import axios from \"axios\";\r\nimport { APP_SETTINGS } from \"../../config\";\r\n\r\nexport function employeeRegister(employeedata) {\r\n    return axios.post(APP_SETTINGS.API_PATH.Employee.registeremployee, employeedata)\r\n}\r\nexport function employeeUpdate(employeedata) {\r\n    return axios.post(APP_SETTINGS.API_PATH.Employee.registeremployee, employeedata)\r\n}\r\n\r\nexport function deleteEmployee(id) {\r\n    return axios.delete(`${APP_SETTINGS.API_PATH.Employee.deleteemployee}?id=${id}`);\r\n\r\n}\r\nexport function getAllEmployee(search) {\r\n    return axios.get(`${APP_SETTINGS.API_PATH.Employee.getallemployee}?search=${search}`);\r\n }\r\nexport function getSingleEmployeeRecord(id) {\r\n    return axios.get(`${APP_SETTINGS.API_PATH.Employee.getsingleemployee}?id=${id}`);\r\n\r\n}","import React, { useEffect,useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage, FieldError, Loader } from \"../../assets\";\r\nimport {registerEmployee,udpateEmployee,getAllEmployees,deleteEmployeeRecord,getsingleEmployee} from \"../../redux/actions\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  FormLabel,\r\n  Card,\r\n  Table\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nfunction EmployeeRegister() {\r\n  const { register, handleSubmit, errors ,reset} = useForm();\r\n  const [searchvalue, setsearchvalue] = useState('')\r\n  let [id, setEmployeeId] = useState(0);\r\n  let [name, setname] = useState('');\r\n  let [email, setemail] = useState('');\r\n  let [department, setdepartment] = useState('');\r\n  let [dateOfBirth, setdateOfBirth] = useState('');\r\n\r\n\r\n\r\n  let dispatch = useDispatch()\r\n  let employee = useSelector((state) => state.employee)\r\n  useEffect(() => {\r\n    document.title = \"Register Employee\"\r\n    if(employee.getsingle!==null){\r\n    setEmployeeId(employee.getsingle.id)\r\n    setname(employee.getsingle.name)\r\n    setemail(employee.getsingle.email)\r\n    setdepartment(employee.getsingle.department)\r\n    setdateOfBirth(employee.getsingle.dateOfBirth)\r\n    }\r\n    dispatch(getAllEmployees(\"all\"))\r\n  }, [employee.getsingle,dispatch])\r\n  function onSubmit(data) {\r\n    console.log(\"data\",data)\r\n\r\n    if (data.id > 0) {\r\n        dispatch(udpateEmployee(data, Notificiation))\r\n\r\n    }\r\n    else {\r\n        dispatch(registerEmployee(data, Notificiation))\r\n\r\n  }\r\n  setEmployeeId(0)\r\n  setname('')\r\n  setemail('')\r\n  setdepartment('')\r\n  setdateOfBirth('')\r\n}\r\n   \r\n  function deleteEmployee(id) {\r\n\r\n    dispatch(deleteEmployeeRecord(id, Notificiation))\r\n}\r\nfunction editEmployee(id){\r\n    dispatch(getsingleEmployee(id))\r\n  \r\n}\r\nfunction GetFilterRecord(search) {\r\n    setsearchvalue(search)\r\n  if(search.trim().length === 0){\r\n    dispatch(getAllEmployees(\"all\"))\r\n  }\r\n  else{\r\n    dispatch(getAllEmployees(search))\r\n\r\n  }\r\n}\r\n  function Notificiation(data, condition) {\r\n    reset();\r\n    condition === \"error\" ?\r\n        toast.error(data, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n        :\r\n        toast.success(data, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n}\r\n  console.log(employee)\r\n  return (\r\n    <React.Fragment>\r\n\r\n    <ToastContainer />\r\n    <div className=\"container-fluid page-height main-login-body p-5\">\r\n        \r\n    <Card>\r\n    <Card.Body>\r\n    <div className=\"row mt-1\">\r\n            <div className=\"col-4\">\r\n              <FormGroup>\r\n                <FormLabel className=\"bold\">\r\n                  {\"Search Employee\"}\r\n                </FormLabel>\r\n                <FormControl onChange={(e) => GetFilterRecord(e.target.value)} value={searchvalue}/>\r\n              </FormGroup>\r\n            </div>\r\n\r\n            </div>\r\n            <Card.Header>\r\n                Employees List\r\n            </Card.Header>\r\n    {\r\n                        employee.getall\r\n                            &&\r\n                            employee.getall.length > 0\r\n                            ?\r\n                            <Table  bordered hover>\r\n                                <thead className=\"background_tabledata\">\r\n                                    <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Department</th>\r\n                                    <th>DOB</th>\r\n                                    <th>Action</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                         employee.getall\r\n                                        &&\r\n                                        employee.getall.map((item, index) => {\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td>{item.name}</td>\r\n                                                    <td>{item.email}</td>\r\n                                                    <td>{item.department}</td>\r\n                                                    <td>{item.dateOfBirth}</td>\r\n                                                    <td> \r\n                                        \r\n                                                <button className=\"btn btn-sm btn btn-primary\" data-for=\"Edit\" data-tip=\"Edit\" onClick={() => editEmployee(item.id)} data-iscapture=\"true\" ><FaEdit />\r\n                                                 </button> \r\n                                                 \r\n                                           <button className=\"btn btn-sm btn btn-danger\" data-for=\"Trash\" data-tip=\"Delete\" onClick={() => deleteEmployee(item.id)} data-iscapture=\"true\" ><FaTrash />\r\n                                             </button>\r\n                                             \r\n                                                      \r\n                                   \r\n                                   </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                            : <p>No Employee Added</p>\r\n                    }\r\n        </Card.Body>\r\n        </Card>\r\n<div className=\"mt-3\">\r\n    <Card>\r\n    <Card.Header>\r\n                Register Employee\r\n            </Card.Header>\r\n    <Card.Body>\r\n  \r\n        {\r\n          employee.registerFailure === true\r\n          &&\r\n          <ErrorMessage message={employee.registerError} />\r\n        }\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form-aside\">\r\n          <div className=\"row mt-1\">\r\n            <div className=\"col-6\">\r\n              <FormGroup>\r\n                <FormLabel>\r\n                  {\"Name\"}\r\n                </FormLabel>\r\n                <FormControl\r\n                  style={{ borderColor: (errors && errors.name) ? \"#a80000\" : \"\" }}\r\n                  name=\"name\"\r\n                  defaultValue={name}\r\n                  type=\"name\"\r\n                  ref={register({ required: true })} />\r\n              </FormGroup>\r\n              {\r\n                errors.name\r\n                &&\r\n                <FieldError message={\"This Field is Required\"} />\r\n              }\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <FormGroup>\r\n                <FormLabel>\r\n                  {\"Email\"}\r\n                </FormLabel>\r\n                <FormControl\r\n                  style={{ borderColor: (errors && errors.email) ? \"#a80000\" : \"\" }}\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  defaultValue={email}\r\n                  ref={register({ required: true })} />\r\n                {\r\n                  errors.email\r\n                  &&\r\n                  <FieldError message={\"This Field Is Required\"} />\r\n                }\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <FormGroup>\r\n                <FormLabel>\r\n                  {\"Department\"}\r\n                </FormLabel>\r\n                <FormControl\r\n                  style={{ borderColor: (errors && errors.department) ? \"#a80000\" : \"\" }}\r\n                  name=\"department\"\r\n                  type=\"department\"\r\n                  defaultValue={department}\r\n                  ref={register({ required: true })} />\r\n                {\r\n                  errors.department\r\n                  &&\r\n                  <FieldError message={\"This Field Is Required\"} />\r\n                }\r\n              </FormGroup>\r\n              <input type=\"hidden\" name=\"id\"defaultValue={id} ref={register()} />\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <FormGroup>\r\n                <FormLabel>\r\n                  {\"Date of Birth\"}\r\n                </FormLabel>\r\n                <FormControl\r\n                  style={{ borderColor: (errors && errors.dateOfBirth) ? \"#a80000\" : \"\" }}\r\n                  name=\"dateOfBirth\"\r\n                  ref={register({required:true})}\r\n                  type=\"date\"\r\n                  \r\n                   />\r\n                   {\r\n                  errors.dateOfBirth\r\n                  &&\r\n                  <FieldError message={\"This Field Is Required\"} />\r\n                }\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n      \r\n          <div className=\"col-6\">\r\n          {\r\n                                    employee\r\n                                        &&\r\n                                        employee.registerLoading === true\r\n                                        ?\r\n                                        <Loader />\r\n                                        : <button\r\n                                            type=\"submit\"\r\n                                            // className=\"btn-2 btn_register btn-create py-2\"\r\n                                            className=\"btn btn btn-primary\"\r\n\r\n                                        >\r\n                                            {\"Register\"}\r\n                                        </button>\r\n                                }\r\n            \r\n          </div>\r\n          \r\n          </div>\r\n        </form>\r\n        </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default EmployeeRegister;\r\n\r\n","import NoPage from \"./NoPageFound\";\nimport Signup from \"./Signup\";\nimport EmployeeRegister from \"./Employee\";\nconst WEB_PAGES = {\n    NOPAGE: NoPage,\n    SIGNUP: Signup,\n    EMPLOYEEREGISTER:EmployeeRegister\n}\n\nexport { WEB_PAGES };\n","import React from \"react\";\n\nexport default function NoPage() {\n    return (\n        <div>\n            <h2>\n                {\"No Page Found.\"}\n            </h2>\n        </div>\n    )\n}","\nimport React, { createContext, useContext } from 'react';\nimport { useCookies } from 'react-cookie';\nconst authContext = createContext();\nexport function ProvideAuth({ children }) {\n  const [cookies] = useCookies(['project_user']);\n  const user = cookies;\n  return (\n    <authContext.Provider value={user}>\n      {children}\n    </authContext.Provider>\n  );\n}\nexport function useAuth() {\n  return useContext(authContext);\n}\n","// A wrapper for <Route> that redirects to the login\n\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { PATH } from \"../../config\";\nimport { useAuth } from \"./ProvideAuth\";\nfunction PublicRoute({ children, ...rest }) {\n\n    let auth = useAuth();\n    return (\n        <Route\n            {...rest}\n            onUpdate={() => window.scrollTo(0, 0)}\n            render={({ location }) =>\n                (auth.project_user && auth.project_user.token) ? (\n                    <Redirect\n                        to={{\n                            pathname: PATH.DASHBOARD,\n                            state: { from: location },\n                        }}\n                    />\n                ) : (\n                    <>\n                        {children}\n                    </>\n                )\n            }\n        />\n    );\n}\nexport default PublicRoute;\n\n","import React, { useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { WEB_PAGES } from \"../components\";\nimport { PATH } from \"../config\";\nimport PublicRoute from \"./Auth/PublicRoute\";\nimport { useLocation } from 'react-router-dom';\nexport const RouterConfig = () => {\n  const { pathname } = useLocation();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return (\n    <div>\n      <Switch>\n       \n        <Route path={PATH.NOPAGE} component={WEB_PAGES.EMPLOYEEREGISTER} />\n      </Switch>\n    </div>\n  );\n};\n","import React  from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RouterConfig } from \"./Navigation/RouterConfig\";\nimport { ProvideAuth } from \"./Navigation/Auth/ProvideAuth\";\n\nfunction App() {\n  return (\n    <ProvideAuth>\n      <BrowserRouter>\n        <RouterConfig />\n      </BrowserRouter>\n    </ProvideAuth>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { EMPLOYEE_REQUEST } from \"../actions/utilities\";\nconst INITIAL_STATE = {\n    registerLoading: false,\n    registerSuccess: false,\n    registerFailure: false,\n    registerError: null,\n    employee: null,\n\n    updateLoading: false,\n    updateSuccess: false,\n    updateFailure: false,\n    updateError: null,\n    employee: null,\n\n    getsingleLoading: false,\n    getsingleSuccess: false,\n    getsingleFailure: false,\n    getsingleError: null,\n    getsingle: null,\n\n    getallLoading: false,\n    getallSuccess: false,\n    getallFailure: false,\n    getallError: null,\n    getall: [],\n\n    deleteLoading: false,\n    deleteSuccess: false,\n    deleteFailure: false,\n    deleteError: null,\n    deleteresponse: null,\n};\n\nexport const employeeReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n\n        case EMPLOYEE_REQUEST.EMPLOYEE_REGISTER_REQUEST:\n            return {\n                ...state,\n                registerLoading: true,\n                registerSuccess: false,\n                registerFailure: false,\n                registerError: null,\n            }\n        case EMPLOYEE_REQUEST.EMPLOYEE_REGISTER_FAILURE:\n            return {\n                ...state,\n                registerLoading: false,\n                registerSuccess: false,\n                registerFailure: true,\n                registerError: action.payload\n            }\n        case EMPLOYEE_REQUEST.EMPLOYEE_REGISTER_SUCCESS:\n            const allEmpList = state.getall;\n            allEmpList.push(action.payload);\n            return {\n                ...state,\n                registerLoading: false,\n                registerSuccess: true,\n                registerFailure: false,\n                registerError: null,\n                getall: allEmpList\n            }\n\n            case EMPLOYEE_REQUEST.EMPLOYEE_UPDATE_REQUEST:\n                return {\n                    ...state,\n                    updateLoading: true,\n                    updateSuccess: false,\n                    updateFailure: false,\n                    updateError: null,\n                }\n            case EMPLOYEE_REQUEST.EMPLOYEE_UPDATE_FAILURE:\n                return {\n                    ...state,\n                    updateLoading: false,\n                    updateSuccess: false,\n                    updateFailure: true,\n                    updateError: action.payload\n                }\n            case EMPLOYEE_REQUEST.EMPLOYEE_UPDATE_SUCCESS:\n                const allemployeelist = state.getall;\n                for (let i = 0; i < allemployeelist.length; i++) {\n                    if (allemployeelist[i].id === action.payload.id)\n                    allemployeelist[i] = action.payload\n                }\n                return {\n                    ...state,\n                    updateLoading: false,\n                    updateSuccess: true,\n                    updateFailure: false,\n                    updateError: null,\n                    getall: allemployeelist\n                }\n\n            case EMPLOYEE_REQUEST.EMPLOYEE_GET_SINGLE_REQUEST:\n                return {\n                    ...state,\n                    getsingleLoading: true,\n                    getsingleLoadingSuccess: false,\n                    getsingleLoadingFailure: false,\n                    getsingleLoadingError: null,\n                }\n            case EMPLOYEE_REQUEST.EMPLOYEE_GET_SINGLE_FAILURE:\n                return {\n                    ...state,\n                    getsingleLoading: false,\n                    getsingleSuccess: false,\n                    getsingleFailure: true,\n                    getsingleError: action.payload\n                }\n            case EMPLOYEE_REQUEST.EMPLOYEE_GET_SINGLE_SUCCESS:\n                return {\n                    ...state,\n                    getsingleLoading: false,\n                    getsingleSuccess: true,\n                    getsingleFailure: false,\n                    getsingleError: null,\n                    getsingle: action.payload\n                }\n\n                case EMPLOYEE_REQUEST.EMPLOYEE_GET_ALL_REQUEST:\n                    return {\n                        ...state,\n                        getallLoading: true,\n                        getallLoadingSuccess: false,\n                        getallLoadingFailure: false,\n                        getallLoadingError: null,\n                    }\n                case EMPLOYEE_REQUEST.EMPLOYEE_GET_ALL_FAILURE:\n                    return {\n                        ...state,\n                        getallLoading: false,\n                        getallSuccess: false,\n                        getallFailure: true,\n                        getallError: action.payload\n                    }\n                case EMPLOYEE_REQUEST.EMPLOYEE_GET_ALL_SUCCESS:\n                    return {\n                        ...state,\n                        getallLoading: false,\n                        getallSuccess: true,\n                        getallFailure: false,\n                        getallError: null,\n                        getall: action.payload\n                    }\n\n                    case EMPLOYEE_REQUEST.EMPLOYEE_DELETE_REQUEST:\n                        return {\n                            ...state,\n                            deleteLoading: true,\n                            deleteSuccess: false,\n                            deleteFailure: false,\n                            deleteError: null,\n                        }\n                    case EMPLOYEE_REQUEST.EMPLOYEE_DELETE_FAILURE:\n                        return {\n                            ...state,\n                            deleteLoading: false,\n                            deleteSuccess: false,\n                            deleteFailure: true,\n                            deleteError: action.payload\n                        }\n                    case EMPLOYEE_REQUEST.EMPLOYEE_DELETE_SUCCESS:\n                        let allemplist = state.getall;\n                        console.log(\"state.getall\",action.payload)\n                        for (let i = 0; i < allemplist.length; i++) {\n                          if (allemplist[i].id === action.payload) {\n                            allemplist.splice(i, 1);\n                          }\n                        }\n                        return {\n                            ...state,\n                            deleteLoading: false,\n                            deleteSuccess: true,\n                            deleteFailure: false,\n                            deleteError: null,\n                            getall: allemplist\n                        }\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from \"redux\";\nimport { employeeReducer } from \"./userReducer\";\nexport const rootReducer = combineReducers({\n    employee: employeeReducer,\n   });\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers\";\n\nconst devTools = process.env.NODE_ENV !== \"production\" && window.__REDUX_DEVTOOLS_EXTENSION__\n    ? window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__()\n    : (a) => a;\n\nconst middleware = compose(applyMiddleware(thunk), devTools);\nconst store = createStore(rootReducer, middleware);\nexport { store };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport { store } from './redux/store';\nimport { CookiesProvider } from 'react-cookie';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/styles/index.css';\nimport './assets/styles/mediaquery.css';\nimport './index.css';\nimport \"./App.css\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nif (process.env.NODE_ENV === 'production') {\n  console.log = function () { };\n}\nReactDOM.render(\n    <React.StrictMode>\n      <CookiesProvider>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </CookiesProvider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}